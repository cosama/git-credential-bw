#!/bin/bash

# A credential helper for git to retrieve usernames and passwords from bitwarden.
# For general usage, see https://git-scm.com/docs/gitcredentials.
# Here's a quick version:
# 1. Put this somewhere in your path (i.e. ~/.local/bin/git-credential-bw)
# 2. git config --global credential.helper bw
#
# Author: Marco Salathe
# Website: https://github.com/cosama/git-credential-bw

## Configurable Parameters:

# Timeout after which the password needs to be entered again (seconds)
timeout=900


declare -A params
declare -A credentials

if [ "x$1" == "x-l" ];
then
    shift
    bwuser=$1
    shift
fi

if [ "x$1" == "xget" ];
then
    while read line;
    do
        key=${line%%=*}
        value=${line#*=}
        params[$key]=$value
    done

    if [ "x${params['protocol']}" != "xhttps" ];
    then
        exit
    fi

    if [ -z "${params['host']}" ];
    then
        exit
    fi

    cache_buf=$(echo "host=${params['host']}" | git credential-cache get)
    if [ -z "${cache_buf}" ];
    then
        session=$(bw unlock --raw < /dev/tty)
        if [ $? -ne 0 ];
        then
            session=$(bw login --raw < /dev/tty)
            if [ $? -ne 0 ];
            then
                echo "Failed to login to bitwarden" > /dev/stderr
                exit
            fi
        fi
        credentials['username']=$(bw get --session ${session} --raw username ${params['host']})
        credentials['password']=$(bw get --session ${session} --raw password ${params['host']})
        if [ "x${credentials['username']}" == "x" ] || [ "x${credentials['password']}" == "x" ];
        then
            echo "Couldn't find host in bitwarden database." > /dev/stderr
            exit
        fi
        (echo "protocol=${params['protocol']}";
         echo "host=${params['host']}";
         echo "username=${credentials['username']}";
         echo "password=${credentials['password']}") | git credential-cache store --timeout $timeout
        echo "username=${credentials['username']}"
        echo "password=${credentials['password']}"
    else
        printf "${cache_buf}"
    fi
fi
